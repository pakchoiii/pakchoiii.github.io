[{"title":"Read Level 介绍","url":"/7712b7f.html","content":"\n# Vth 基本原理\n![](02.png)\n上图是 Nand Flash 最基础的存储单元，该单元被称为 1 个 Cell。每个 Cell 均由 1 个 FGMOS（浮栅型金属 - 氧化物 - 半导体场效应晶体管，即 Floating-gate MOSFET）构成 —— 相比普通 MOSFET，它额外增加了一层 “浮栅（Floating Gate）” 结构。\n\n可将 MOSFET 理解为 1 个可受控调节的电阻：当在其栅极（Gate）与源极（Source）之间施加电压Vgs时，会改变漏极（Drain）与源极（Source）之间的电流I，进而间接改变此处的电压V（即需测量的目标电压），其 I-V 特性曲线下图所示。\n![](03.png)\n\n1. 当栅源电压Vgs小于导通电压Vth时，漏源电流I始终为 0，Cell 处于不导通状态，此时测量得到的漏源电压V等于 0。\n2. 当Vgs大于Vth时，Cell 开始导通，漏源电流I随Vgs增大而逐渐上升，漏源电压V也随之增大。\n3. 其中，Vth被定义为 “导通电压”。该电压值越高，意味着 Cell 需要更大的Vgs才能启动导通，整体导通难度也随之增加。\n\n# Vth 调控原理\n\n浮栅（Floating Gate）是 FGMOS 的核心结构，其核心功能是**存储电子**，并通过电子存储量的变化直接调控 Cell 的导通电压**Vth**，最终实现数据的物理存储。 \n\n## 电子存储原理：量子隧穿效应\n\n浮栅的电子存储依赖**量子隧穿效应（Tunneling Effect）** ，具体机制与关键特性如下：\n\n1. **效应本质**：在特定电场条件下（如栅极施加高电压），电子可突破氧化层的能量壁垒，“隧穿” 进入浮栅并被束缚其中，实现电子存储；反向电场则可使电子从浮栅隧穿流出，完成擦除。\n2. **关键特性**：隧穿效应的发生具有**概率性**，并非施加电压后所有电子都会立即隧穿。该特性会直接影响后续 VT 分布图的形态，例如导致曲线出现一定宽度的分布而非绝对尖锐的峰值。\n\n## 电子存储对 Vth 的影响机制\n\n浮栅中电子的有无，会通过 “内建偏压” 改变 Vth，具体逻辑可通过公式与实例说明：\n\n- **核心公式关联**：当浮栅存储电子时，相当于在栅极（Gate）与源极（Source）之间额外叠加了一个**负向内建偏压 Vfb**。此时，实际作用于沟道的有效栅源电压变为：\n\n  **Vgs (eff) = Vgs (外施) - Vfb**\n\n  为使 Cell 导通（Vgs (eff) ≥ Vth (初始)），需更高的外施 Vgs，即等效表现为**Vth 增大**。\n\n- **实例对比（基于读操作 Vread）**：\n\n  | 存储状态           | 浮栅电子 | Vth 大小     | 施加相同 Vread 时的状态  | 读出电压 V               |\n  | ------------------ | -------- | ------------ | ------------------------ | ------------------------ |\n  | Cell 1（数据 “0”） | 无       | 较小（Vth1） | Vread ≥ Vth1，Cell 导通  | V1 ≠ 0（有电流对应电压） |\n  | Cell 2（数据 “1”） | 有       | 较大（Vth2） | Vread ＜ Vth2，Cell 截止 | V2 = 0（无电流）         |\n\n![](04.png)\n![](05.png)\n\n# 电压与功能对应\n\n| 操作类型 | 操作名称   | 所需电压（**概略值**）  | 核心作用                     | 对 Cell 状态的影响                 |\n| -------- | ---------- | ----------------------- | ---------------------------- | ---------------------------------- |\n| Program  | 编程（写） | +20V（正向高压 Vprog）  | 将电子 “注入” 浮栅           | 浮栅电子增多 → Vth（导通电压）增大 |\n| Erase    | 擦除       | -20V（负向高压 Verase） | 将电子从浮栅 “抽出”          | 浮栅电子减少 → Vth（导通电压）减小 |\n| Read     | 读取       | 0~10V（低压）           | 检测 Cell 导通状态以判断数据 | 不改变浮栅电子数量，无状态损耗     |\n\n# Read Level\n\n上面讲到的Cell只有 “1” 和 “0” 两种状态，仅需 1 个阈值电压就能区分 2 种状态，这种存储方式叫做SLC（单层单元， Single-Level Cell）\n\n随着技术对导通电压Vth的控制精度提升，Nand Flash 实现了MLC（多层单元，Multi-Level Cell） 存储方案 —— 单个 Cell 可存储 2 个 bit 的数据，核心原理是通过设置多个Read Level（读取电平） ，区分 Cell 中不同的 Vth 区间，进而对应不同的二进制信息。\n\n当前主流 Nand Flash 普遍采用TLC（三层单元，Tri-Level Cell） 和QLC（四层单元，Quad-Level Cell） 方案，分别实现单个 Cell 存储 3bit 和 4bit 数据。二者核心原理与 MLC 一致，均通过细分 Vth 区间和增加 Read Level 数量实现，仅在区间划分精度和电平数量上进一步提升。\n\n| 单元类型 | 单 Cell 存储 bit 数 | Vth 区间数量（2^n） | 所需 Read Level 数量    | 核心逻辑差异                                      |\n| -------- | ------------------- | ------------------- | ----------------------- | ------------------------------------------------- |\n| MLC      | 2bit                | 4 个                | 3 个（区分 4 个区间）   | 基础区间划分，Read Level 数量较少                 |\n| TLC      | 3bit                | 8 个                | 7 个（区分 8 个区间）   | Vth 区间更细，对控制精度要求更高                  |\n| QLC      | 4bit                | 16 个               | 15 个（区分 16 个区间） | Vth 区间最细，Read Level 数量最多，需更高校准精度 |\n\n举个MLC例子:\n只需按顺序向其施加 1V、3.3V、6.6V 这三个不同的Vread（读取电压），并记录 Cell 在哪个电压下首次导通，即可反向判断其存储的具体数据；这些用于区分 Vth 区间的特定 Vread，统称为Read Level（读取电平）\n\n![](06.png)\n![](07.png)","tags":["Vth"],"categories":["Nand Flash"]},{"title":"Nand Vth 阈值分布","url":"/75b652e1.html","content":"# Vth 分布\n![](01.png)\nSLC（Single-Level Cell，单级单元）存储架构中，单个存储单元（Cell）仅能存储 1 个 bit 的数据，这一特性决定了它仅需两种工作状态即可实现数据表征 —— 分别为 “擦除态（Erased）” 与 “编程态（Programmed）”。​\n在电压阈值（Vth）分布层面，两种工作状态对应呈现出两个独立且清晰的分布峰。基于这一特性，数据读取过程无需复杂的电压判断逻辑：只需设置一个读取电压（Vread，标记为 RL1），并将其精准置于两个 Vth 分布峰的中间区间。如此一来，通过检测字线（WL）下所有存储单元的实际 Vth 值与 RL1 的相对大小，即可快速区分单元处于 “擦除态” 还是 “编程态”，进而准确读出对应 1 个 bit 的数据。​\n![](02.png)\nTLC（Triple-Level Cell，三级单元）存储架构通过更精细的电压控制，实现了单个存储单元存储 3 个 bit 数据的突破，而 3 个 bit 的数据组合共可形成 8 种不同的逻辑状态，具体对应为：111、110、100、000、010、011、001、101。​\n从Vth分布来看，这 8 种逻辑状态各自对应独立的电压区间，最终呈现为8 个明显的 Vth 分布峰（每个逻辑状态对应唯一的 Vth 分布峰）。相较于 SLC，TLC 的 Vth 分布峰数量大幅增加且峰间间距更精细，这对读取电压的设置精度、数据区分逻辑复杂度提出了更高要求 —— 需通过多组独立读取电压依次检测，才能准确识别每个存储单元所属的 Vth 分布峰，进而完整解析出 3 个 bit 的数据。\n\n# 正态分布\n\nNAND 闪存阈值电压（Vt）呈正态分布，核心是制造与工作中无法避免的 “随机性扰动因素”—— 存储单元内的**随机杂质**与**结构不完美性**，导致电子移动行为具统计随机性，大量单元 Vth 数据聚合后符合正态分布。\n\n具体来看，半导体制造中，沟道、电荷捕获层残留的随机杂质（如金属离子、晶格缺陷），会形成 “电势陷阱” 或 “导电阻碍”，使不同单元电子移动阻力有差异，Vt 值高低不同；器件结构不完美（如氧化层厚度波动、电极界面粗糙）进一步放大随机性，比如氧化层薄则电子隧穿易、Vt 低，厚则隧穿难、Vt 高。\n\n因杂质分布、结构差异是随机事件，且单个 NAND 芯片含数百万至上亿个单元，依据中心极限定理，大量独立随机变量（各单元 Vth 值）的统计结果会趋近**正态分布**，表现为 “钟形” 曲线，多数单元 Vth 集中在均值附近，少数因极端情况处于两端。\n\n# 阈值电压\n\n简单类比：把 NAND 存储单元想象成一个 “电子开关”，而**阈值电压**就是让这个开关刚好 “导通” 或 “断开” 的临界电压值—— 它是判断存储单元状态、实现数据读写的核心基准。\n\n## 阈值电压的核心作用：定义逻辑状态\n\n阈值电压本质是区分单元 “0” 和 “1” 逻辑状态的电压界限，随存储类型（如 SLC、TLC）调整：\n\n- 电压低于 Vt，单元 “断开”（如对应逻辑 “0”）；电压高于 Vt，单元 “导通”（如对应逻辑 “1”）。\n\n- SLC 仅需 1 个阈值电压就能区分 2 种状态，TLC 因需区分 8 种状态，会设多组 Vth 区间，核心仍是通过 “电压是否超阈值” 判断状态。\n\n需要注意的是，前文提到的 SLC 仅需 1 个阈值电压就能区分 2 种状态，而 TLC 因需区分 8 种状态，会对应设置多组不同的阈值电压区间，本质仍是通过 “电压是否超过某一阈值” 来判断单元的具体逻辑状态。\n\n## 阈值电压对数据读写的关键影响\n\n阈值电压的大小和稳定性，直接决定了 NAND 闪存数据读写的准确性和可靠性：\n\n- 读取环节：若阈值电压设置不合理（如过于靠近某一 Vth 分布峰），可能导致误判单元逻辑状态；\n\n- 编程 / 擦除环节：每次写入或擦除数据，本质是通过调整单元内的电荷量来改变其实际 Vth 值 —— 若阈值电压漂移（如因长期使用出现电荷泄漏），会导致单元难以稳定维持目标逻辑状态，进而影响数据存储寿命；\n\n- 与 Vth 分布的关联：Vt 正态分布是大量单元实际 Vth 的统计结果，标准 Vth 需避开分布峰边缘以确保识别准确。\n\n# TLC Vth 分布\n\n前文已提及，TLC 单个 Cell 存储 3 个 bit 时，3 个 bit 的二进制组合共形成 8 种逻辑状态（111、110、100、000、010、011、001、101）。而图中呈现的 8 个 Vth 峰，正是这 8 种逻辑状态在 “电压阈值维度” 的直观体现\n每个 Vth 峰对应的 3 个 bit 并非随机组合，而是按 “位权重” 分为最高有效位（MSB，Most Significant Bit）、中间有效位（CSB，Central Significant Bit）、最低有效位（LSB，Least Significant Bit） ，三者共同定义峰的逻辑状态。（下面举例格雷码2-3-2的Vth 分布）\n\n![](03.png)\n\n图中最左侧为 Erased（擦除）状态对应的 Vth 峰，且存在明确的 bit 差异规律：\n\n- 相邻峰（如 P1 与 P2、P3 与 P4、P5 与 P6）之间仅存在 1 个 bit 值不同，具体表现为仅 CSB（中间有效位）的取值有差异；\n\n- 这种 “相邻峰仅 1 个 bit 不同” 的设计，本质是采用了 Gray Code（格雷码）编码方式，可减少数据读写时的误判概率。\n\n![](04.png)\n\n上图可以分析，想要识别CSB的bit值，需要第一次在RL6读，第二次在RL4读，第三次在RL2读一下，通过三次reference的read，做一次异或运算得到最终的bit值。\n\nTLC 的三个 bit（LP、UP、XP）或者（LSB、CSB、MSB）对应 TLC page，读取 8 种 Vth 分布状态需按特定规则操作：LP 读 2 次（用 RL5、RL1），UP 读 3 次（用 RL6、RL4、RL2），XP 读 2 次（用 RL7、RL3）。\n\n这仅仅是一种TLC分布，常有的TLC Gray Code：2-3-2、1-2-4、1-3-3。\n不同存储介质因 “存储单元状态数” “读写机制” “可靠性需求” 不同，会采用适配的格雷码方案，而格雷码的差异会直接影响读写速度、数据可靠性、错误校正复杂度、功耗四大核心指标。","tags":["Vth"],"categories":["Nand Flash"]},{"title":"Nand Training","url":"/44fc021b.html","content":"# Nand Training Feature\n![](file01_pic5.png)\n\nTraining features shown in this section shall be supported by NAND devices operating over 800MT/s in heavily loaded systems.\n\n# Nand Training Type\n\n- ZQ Calibration\n- DCC Training\n- Read DQ Training\n- Write DQ Training\n  - WDCA(Option)\n  - Internal VrefQ\n\n# ZQ Calibration\n\n## ZQ Calibration 介绍\n\nZQ Calibration是一种电子调整过程，用于精确设定芯片输入/输出接口的电阻值，以确保在高速数据传输中信号清晰稳定，减少错误。ZQ Calibration就是这个“调音师”，它使用一个**外部精密参考电阻**作为“标准音叉”，来校准芯片内部电路这个“乐器”的音准（电阻值），无论环境如何变化，都能保持最佳性能。\n\n**ZQ Calibration的作用**：它是一个**动态、持续**的过程。内存控制器会在初始化、退出低功耗状态、或者定期发起ZQ Calibration命令，让内存芯片根据当前的**实时温度和电压**重新进行校准，确保从轻载到重载的全工况下都能保持最佳状态。\n\n**核心功能：**\n\n1. 动态阻抗匹配\n2. 补偿环境温度\n3. 提升系统稳定性\n4. 支持高频与高带宽\n5. 降低功耗\n6. 自动化与兼容性\n\n## Nand端 ZQ Calibration\n\n- 对于超过**400MT/s**速度的**NV-DDR3**接口，ZQ校准是可选的，但推荐使用。\n- 对于**NV-LPDDR4**接口，无论数据速率如何，都需要进行ZQ校准。\n\nZQ Calibration分为长校准和短校准。\n\n两者区别如下：\n\n| **特性**     | **长校准**                                                   | **短校准**                                                   |\n| ------------ | ------------------------------------------------------------ | ------------------------------------------------------------ |\n| **主要目的** | **全面、精确的校准**，建立初始基准或应对重大环境变化         | **快速、局部的微调**，跟踪和补偿微小的漂移                   |\n| **触发时机** | 1. 上电初始化（Power-On）<br>2. 退出自刷新模式（Exit Self-Refresh）<br>3. 温度发生剧烈变化后（由传感器检测）<br>4. 可能由软件手动触发 | 在**正常激活状态（Active状态）** 下，由内存控制器**定期**发起 |\n| **校准时长** | **较长** tZQCL（通常是时钟周期的数百倍，可以通过看RB拉低时间） | **非常短** tZQCS（通常比长校准短一个数量级）                 |\n| **功耗影响** | **相对较高**，因为需要启动完整的校准电路并持续较长时间       | **非常低**，因为只是对当前设置进行小幅修正                   |\n\n**注意事项：**\n\n1. 在tZQCL或tZQCS期间，控制器不得对NAND通道（即数据总线）执行任何操作，包括读取状态。\n2. 如果需要使用ZQ校准时，需要注意主控端应当同步进行ZQ校准。\n3. 目前大多数切高速的流程中加了ZQ校准流程（ZQ长校准），但是实际高速运行过程中，是否需要加入定时的ZQ短校准，可以根据实际情况提出方案（一般不考虑）。\n4. 如果需要使用ZQ短校准，应该需要注意时间间隔。\n5. ZQ校准时，需要将DQ配置为High阻抗。\n\n## ZQ Calibration和驱动强度的关系\n\n**驱动强度**好比音响的**音量旋钮**，决定了输出信号的“推力”或“力度”。而**ZQ校准**则像一个**专业的音响系统校准程序**，它能根据现场环境（温度、电压）的变化，自动调整每个扬声器的音量和音色，确保无论处于音乐厅还是露天场地，播放效果都清晰精准、不失真。\n\n注意：目前DataSheet在配置驱动强度和ZQ校准上没有明确先后顺序要求，但是在高速流程图里，是先设置驱动强度再去配置ZQ校准。\n\n![](file01_pic4.png)\n\n# DCC Training\n\nNAND Flash 中的 **DCC Training**（Duty Cycle Correction Training，**占空比校正训练**）是一项用于提升高速NAND接口数据传输可靠性的关键技术。它主要用于**校准信号RE_t/c的占空比**，以提供最佳的数据采样窗口。\n\nFW可以发出以下两种时序，查询SR[0]的结果来确认当前RE_t/c是否能够正常使用。如果SR[0] == 1，需要调整占空比后，重新发起。\n\n\n## DCC Training 的两种方式\n\n### DCC Training Using Set Feature\n\n![](file01_pic7.png)\n\n![](file01_pic6.png)\n\n- 开始DCC Training 前，Set Feature 20h P1[0]设置为1，将DCCE_EN使能\n- 发起Random out时序，不需要处理返回的数据。Nand 在RE Toggle阶段，内部RE时钟正在进行校准\n- 通过Read Status命令查看SR[0]进行check。若fail，主控需要调整REDCC相关配置，重新发起Random out进行校准\n- 完成DCC Training后，需要将DCCE_EN Disable\n\n### DCC Training by using Command\n\n![](file01_pic8.png)\n\n- 18h后读取的长度为完整的page size\n- 不需要处理返回的数据\n- 通过Read Status命令查看SR[0]进行check。若fail，Nand先发起Reset（FFh）完成后，主控再调整REDCC相关配置，重新进行校准\n\n# DQ Training\n\nRead/Write Training 的核心目的是通过校准**DQ（数据）与 DQS（数据选通）的时序偏移**、NAND / 主机的内部参考电压（VrefQ），确保高速读写时数据采样准确，仅适用于 NV-DDR3 和 NV-LPDDR4 接口。 \n\n![](file01_pic9.png)\n\n如上图可见，FW读取数据时，DQS的边沿并不是恰好指向DQ中间，两者可能会有一个gap（专业术语叫相位偏移Skew）。如果gap比较大，且FW没有采取任何措施的话，那么可能会造成采样出错。\n由于FW无法改变Nand发出的时序，因此FW需要通过不断地进行read data训练，寻找一定规律，确认Nand发出的DQ和DQS之间的gap大致是多少，并调整FW接收端的DQ和DQS的delay。\n当前常见确认delay的方法是：找到左右边界然后取中间值。\n\n# Read DQ Training\n\nRead DQ Training是Nand输出16Byte用户自定义Pattern DQ数据的功能（一些厂商可能提供32Byte）。主控侧通过调节RDQ与RDQS的相位/延迟，确保可以正确读取Nand侧的数据。\n\n相关时序如下：\n\n![](file01_pic10.png)\n\nNand反馈的数据是一个相对固定的值，具体数据由发出去的ADDR决定（Inverse Set/ 1st Pattern/ 2nd Pattern）。\n以下为官方提供的一个Inverse Set = 0x35; 1st pattern = 0x5A；2nd pattern = 0x82时，FW发送62h nand吐出的数据内容：\n\n![](file01_pic11.png)\n\n需要注意的是，Nand吐出16Byte还是32byte的数据，可以通过set feature FA 20h P3来决定（有些介质固定）。\n\n![](file01_pic12.png)\n\n# Write DQ Training\n\nWrite DQ Training与Read DQ Training一样，DQS与DQ存在Gap。与之不同的是，Write Training是为了纠正主控发送给Nand端的DQS与DQ之间的Gap。\nWrite DQ Training是通过Nand的写+读来确定写入的数据是否正常，主控侧通过调节WDQ与WDQS的相位/延迟，确保可以写入数据成功。\n\n参考时序如下：\n\n![](file01_pic15.png)\n\n- 63h CMD用于Host发送数据给Nand。\n- 64h CMD用于Host读取写入到Nand的数据。\n\nWrite Training Data size由Nand预先定义，可通过Get Feature Addr 20h P3[3:0]进行获取\n\n![](file01_pic16.png)\n\nFW是通过读取写入的数据是否与预期一致来判断Write DQ training是否通过。\n\n# Internal VrefQ Training（DDR4 Only）\n\n在NV-LPDDR4模式下，NAND内部VREFQ校准是提升高速信号完整性的必要条件。通过写入DQ训练中的连续读写操作配合内部VREFQ校准，可实现对VREFQ的精准校准。\n\n![](file01_pic13.png)\n\n![](file01_pic14.png)\n\nInternal VrefQ Training是通过遍历设定值，找左右边界取中间得到一个比较合适的Vref。\n\nInternal VrefQ Training需要通过Write Training配合进行，找到最佳Vref配置。","tags":["ZQ","DCC Training","DQ Training"],"categories":["Nand Flash"]}]